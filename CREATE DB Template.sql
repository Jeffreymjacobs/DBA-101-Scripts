-- Original Author: Jeffrey Jacobs, www.linkedin.com/in/JEFFREYJACOBS
-- see https://www.linkedin.com/pulse/snowflake-dba-101-deploying-standardized-fully-databases-jacobs/
SET APP_AREA_NAME =''; -- set your business area name, e.g; MARKETING
SET DB_TYPE = ''; -- set your database type name, e.g. DEV, QA, etc.
SET DB_NAME= CONCAT($APP_AREA_NAME,'_',$DB_TYPE,'_DB');
SET VIEW_SCHEMA_NAME = CONCAT($DB_NAME,'.','SFORCE_VIEW_SCHEMA');
SET PHYSICAL_SCHEMA_NAME = CONCAT($DB_NAME,'.','SFORCE_PHYSICAL_SCHEMA');
SET BI_VIEW_SCHEMA_NAME = CONCAT($DB_NAME,'.','BI_VIEW_SCHEMA');
SET ADMIN_ROLE = CONCAT($APP_AREA_NAME,'_',$DB_TYPE,'_ADMIN_ROLE');
SET ANALYST_ROLE = CONCAT($APP_AREA_NAME,'_',$DB_TYPE,'_ANALYST_ROLE');
SET DML_ROLE = CONCAT($APP_AREA_NAME,'_',$DB_TYPE,'_DML_ROLE');
SET DW_XSM = CONCAT($APP_AREA_NAME,'_',$DB_TYPE,'_XSM_WH');
SET DW_SMALL = CONCAT($APP_AREA_NAME,'_',$DB_TYPE,'_SM_WH');
SET CURRENT_USER = CURRENT_USER();

-- CREATE Standard Roles and GRANT to USERs
USE ROLE SECURITYADMIN;
-- Grant ADMIN_ROLE, ANALYST_ROLE and DML_ROLE
-- to CURRENT_USER
CREATE ROLE IF NOT EXISTS IDENTIFIER($ADMIN_ROLE);
GRANT ROLE IDENTIFIER($ADMIN_ROLE) TO USER IDENTIFIER($CURRENT_USER);
CREATE ROLE IF NOT EXISTS IDENTIFIER($ANALYST_ROLE);
GRANT ROLE IDENTIFIER($ANALYST_ROLE) TO USER IDENTIFIER($CURRENT_USER);
CREATE ROLE IF NOT EXISTS IDENTIFIER($DML_ROLE);
-- GRANT EXECUTE TASK ON ACCOUNT
USE ROLE ACCOUNTADMIN;
GRANT EXECUTE TASK, EXECUTE MANAGED TASK ON ACCOUNT TO ROLE IDENTIFIER($ADMIN_ROLE);
-- CREATE DATABASE and GRANT OWNERSHIP to ADMIN_ROLE
USE ROLE SYSADMIN;
CREATE DATABASE IF NOT EXISTS IDENTIFIER($DB_NAME);
GRANT OWNERSHIP ON DATABASE IDENTIFIER($DB_NAME) TO ROLE IDENTIFIER($ADMIN_ROLE);
--CREATE WAREHOUSEs and GRANT USAGE
CREATE WAREHOUSE IF NOT EXISTS IDENTIFIER($DW_XSM) WITH WAREHOUSE_SIZE = 'XSMALL' WAREHOUSE_TYPE = 'STANDARD' AUTO_SUSPEND = 600 AUTO_RESUME = TRUE;
CREATE WAREHOUSE IF NOT EXISTS IDENTIFIER($DW_SMALL) WITH WAREHOUSE_SIZE = 'SMALL' WAREHOUSE_TYPE = 'STANDARD' AUTO_SUSPEND = 300 AUTO_RESUME = TRUE;
GRANT USAGE ON WAREHOUSE IDENTIFIER($DW_XSM) TO ROLE IDENTIFIER($ADMIN_ROLE);
GRANT USAGE ON WAREHOUSE IDENTIFIER($DW_XSM) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON WAREHOUSE IDENTIFIER($DW_XSM) TO ROLE IDENTIFIER($DML_ROLE);
GRANT USAGE ON WAREHOUSE IDENTIFIER($DW_SMALL) TO ROLE IDENTIFIER($ADMIN_ROLE);
GRANT USAGE ON WAREHOUSE IDENTIFIER($DW_SMALL) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON WAREHOUSE IDENTIFIER($DW_SMALL) TO ROLE IDENTIFIER($DML_ROLE);
GRANT USAGE ON WAREHOUSE TINY TO ROLE IDENTIFIER($ADMIN_ROLE);
GRANT USAGE ON WAREHOUSE TINY TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON WAREHOUSE TINY TO ROLE IDENTIFIER($DML_ROLE);
GRANT USAGE ON WAREHOUSE BI_SMALL TO ROLE IDENTIFIER($ADMIN_ROLE);
GRANT USAGE ON WAREHOUSE BI_SMALL TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON WAREHOUSE BI_SMALL TO ROLE IDENTIFIER($DML_ROLE);
-- CREATE SCHEMAs
USE ROLE IDENTIFIER($ADMIN_ROLE);
CREATE SCHEMA IF NOT EXISTS IDENTIFIER($PHYSICAL_SCHEMA_NAME);
CREATE SCHEMA IF NOT EXISTS IDENTIFIER($VIEW_SCHEMA_NAME);
CREATE SCHEMA IF NOT EXISTS IDENTIFIER($BI_VIEW_SCHEMA_NAME);
-- GRANT USAGE ON DATABASE
GRANT USAGE ON DATABASE IDENTIFIER($DB_NAME) TO ROLE IDENTIFIER($DML_ROLE);
GRANT USAGE ON DATABASE IDENTIFIER($DB_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON DATABASE IDENTIFIER($DB_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
-- GRANT USAGE ON View schemas to $ANALYST_ROLE
GRANT USAGE ON SCHEMA IDENTIFIER($VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON SCHEMA IDENTIFIER($BI_VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);

-- Set up the DML user to access any existing tables, not required on empty database but good practice 
GRANT USAGE ON SCHEMA IDENTIFIER($PHYSICAL_SCHEMA_NAME) TO ROLE IDENTIFIER($DML_ROLE);
GRANT SELECT,INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN  SCHEMA  IDENTIFIER($PHYSICAL_SCHEMA_NAME)TO  ROLE IDENTIFIER($DML_ROLE);
-- Set up Analyst roles for SELECT, UDF Usage and SELECT from STREAMs, not required on empty database, but good practice
GRANT SELECT ON ALL VIEWS IN  SCHEMA IDENTIFIER($VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT SELECT ON ALL VIEWS IN  SCHEMA IDENTIFIER($BI_VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON ALL FUNCTIONS IN  SCHEMA IDENTIFIER($VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON ALL FUNCTIONS IN  SCHEMA IDENTIFIER($BI_VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT SELECT ON ALL STREAMS IN SCHEMA IDENTIFIER($PHYSICAL_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
-- Grant SELECT and USAGE on all future VIEWs and STREAMS
USE ROLE SECURITYADMIN;
GRANT SELECT ON FUTURE VIEWS IN  SCHEMA IDENTIFIER($VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT SELECT ON FUTURE VIEWS IN  SCHEMA IDENTIFIER($BI_VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON FUTURE FUNCTIONS IN  SCHEMA IDENTIFIER($VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
GRANT USAGE ON FUTURE FUNCTIONS IN  SCHEMA IDENTIFIER($BI_VIEW_SCHEMA_NAME) TO ROLE IDENTIFIER($ANALYST_ROLE);
USE ROLE IDENTIFIER($ADMIN_ROLE);
